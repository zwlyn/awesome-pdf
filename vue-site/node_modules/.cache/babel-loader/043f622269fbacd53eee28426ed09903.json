{"remainingRequest":"D:\\workspace\\yfjz\\leming-webapiscraper\\vue-sites\\node_modules\\babel-loader\\lib\\index.js!D:\\workspace\\yfjz\\leming-webapiscraper\\vue-sites\\node_modules\\eslint-loader\\index.js??ref--13-0!D:\\workspace\\yfjz\\leming-webapiscraper\\vue-sites\\src\\utils\\validate.js","dependencies":[{"path":"D:\\workspace\\yfjz\\leming-webapiscraper\\vue-sites\\src\\utils\\validate.js","mtime":1577073863852},{"path":"D:\\workspace\\yfjz\\leming-webapiscraper\\vue-sites\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\workspace\\yfjz\\leming-webapiscraper\\vue-sites\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\workspace\\yfjz\\leming-webapiscraper\\vue-sites\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuaW5kZXgtb2YiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcudHJpbSI7CgovKioNCiAqIENyZWF0ZWQgYnkgUGFuSmlhQ2hlbiBvbiAxNi8xMS8xOC4NCiAqLwoKLyoqDQogKiBAcGFyYW0ge3N0cmluZ30gcGF0aA0KICogQHJldHVybnMge0Jvb2xlYW59DQogKi8KZXhwb3J0IGZ1bmN0aW9uIGlzRXh0ZXJuYWwocGF0aCkgewogIHJldHVybiAvXihodHRwcz86fG1haWx0bzp8dGVsOikvLnRlc3QocGF0aCk7Cn0KLyoqDQogKiBAcGFyYW0ge3N0cmluZ30gc3RyDQogKiBAcmV0dXJucyB7Qm9vbGVhbn0NCiAqLwoKZXhwb3J0IGZ1bmN0aW9uIHZhbGlkVXNlcm5hbWUoc3RyKSB7CiAgdmFyIHZhbGlkX21hcCA9IFsnYWRtaW4nLCAnZWRpdG9yJ107CiAgcmV0dXJuIHZhbGlkX21hcC5pbmRleE9mKHN0ci50cmltKCkpID49IDA7Cn0="},{"version":3,"sources":["D:/workspace/yfjz/leming-webapiscraper/vue-sites/src/utils/validate.js"],"names":["isExternal","path","test","validUsername","str","valid_map","indexOf","trim"],"mappings":";;;AAAA;;;;AAIA;;;;AAIA,OAAO,SAASA,UAAT,CAAoBC,IAApB,EAA0B;AAC/B,SAAO,0BAA0BC,IAA1B,CAA+BD,IAA/B,CAAP;AACD;AAED;;;;;AAIA,OAAO,SAASE,aAAT,CAAuBC,GAAvB,EAA4B;AACjC,MAAMC,SAAS,GAAG,CAAC,OAAD,EAAU,QAAV,CAAlB;AACA,SAAOA,SAAS,CAACC,OAAV,CAAkBF,GAAG,CAACG,IAAJ,EAAlB,KAAiC,CAAxC;AACD","sourcesContent":["/**\r\n * Created by PanJiaChen on 16/11/18.\r\n */\r\n\r\n/**\r\n * @param {string} path\r\n * @returns {Boolean}\r\n */\r\nexport function isExternal(path) {\r\n  return /^(https?:|mailto:|tel:)/.test(path)\r\n}\r\n\r\n/**\r\n * @param {string} str\r\n * @returns {Boolean}\r\n */\r\nexport function validUsername(str) {\r\n  const valid_map = ['admin', 'editor']\r\n  return valid_map.indexOf(str.trim()) >= 0\r\n}\r\n"]}]}