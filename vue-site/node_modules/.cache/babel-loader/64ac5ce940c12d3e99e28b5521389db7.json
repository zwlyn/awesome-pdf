{"remainingRequest":"D:\\workspace\\yfjz\\leming-webapiscraper\\vue-sites\\node_modules\\thread-loader\\dist\\cjs.js!D:\\workspace\\yfjz\\leming-webapiscraper\\vue-sites\\node_modules\\babel-loader\\lib\\index.js!D:\\workspace\\yfjz\\leming-webapiscraper\\vue-sites\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\workspace\\yfjz\\leming-webapiscraper\\vue-sites\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\workspace\\yfjz\\leming-webapiscraper\\vue-sites\\src\\views\\caserecord\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\workspace\\yfjz\\leming-webapiscraper\\vue-sites\\src\\views\\caserecord\\index.vue","mtime":1577668509438},{"path":"D:\\workspace\\yfjz\\leming-webapiscraper\\vue-sites\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\workspace\\yfjz\\leming-webapiscraper\\vue-sites\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\workspace\\yfjz\\leming-webapiscraper\\vue-sites\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\workspace\\yfjz\\leming-webapiscraper\\vue-sites\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\workspace\\yfjz\\leming-webapiscraper\\vue-sites\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}